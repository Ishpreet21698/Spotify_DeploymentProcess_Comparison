import streamlit as st

def spotify_compare():

    st.set_page_config(layout="centered")
    st.title('Spotify: Deployment and Comparison')
    st.text('Please use the sidebar to select the deployment technique and know about deployment')
    st.text('process in detail and the comparisons between the different deployment techniques')

    st.sidebar.subheader('Deployment Process')
    dep_process = st.sidebar.selectbox('Select the deployment technique:', ['Default', 'Streamlit Sharing', 'Heroku', 'AWS EC2','Azure VM'])
    #if dep_process=='Default':
        #aa=st.subheader('Please select a deployment technique or comparison attribute')
    if dep_process=='Streamlit Sharing':
        st.header('Streamlit Sharing')
        st.write('')
        st.write('Pre-requisite: Push your code and the following files into your git branch:')
        st.write('1. requirements.txt')
        st.write('2. .py file/files')
        st.write('3. any pickle file/xlsx file/csv file/json file if necessary')
        st.write('Note: The email id of your git account and that of your streamlit sharing should match')
        st.write('')
        st.write('1) Visit this website and Request an invite')
        st.image('Streamlit-1a.png')
        st.write('2) Once you receive the invite and login, click on New app')
        st.image('Streamlit-2.png')
        st.write('3) Select the git repo, branch and Main file path of your code')
        st.image('Streamlit-3.png')
        st.write('4) The webapp is deployed on Streamlit Sharing')
        st.image('Streamlit-4.png')

    if dep_process=='Heroku':
        st.header('Heroku')
        st.write('')
        st.write('Pre-requisite: Push your code and the following files into your git branch:')
        st.write('1. requirements.txt')
        st.write('2. .py file/files')
        st.write('3. Procfile')
        st.write('4. setup.sh file')
        st.write('5. any pickle file/xlsx file/csv file/json file if necessary')
        st.write('Note: The email id of your git account and that of your streamlit sharing should match')
        st.write('')
        st.write('1) Visit this website and login/signup')
        st.image('heroku-1.png')
        st.write('2) Click on New and then on Create new app')
        st.image('heroku-2.png')
        st.write('3) Give a name to the app and then click on Create app')
        st.image('heroku-3.png')
        st.write('4) Select the deployment method as Github and then authenticate with Github')
        st.image('heroku-4.png')
        st.write('5) Once authenticated, search for the specific repository and click Connect')
        st.image('heroku-5.png')
        st.write('6) Click on Deploy Branch (can Enable Automatic Deploys')
        st.image('heroku-6.png')
        st.write('7) Once deployment is successful, click on View')
        st.image('heroku-7.png')
        st.write('8) The webapp is deployed on Heroku')
        st.image('heroku-8.png')

    if dep_process=='AWS EC2':
        st.header('AWS EC2')
        st.write('Pre-requisite 1: Install PUTTY, PUTTYgen and WINSCP softwares')
        st.write('Pre-requisite 2: Create a account on AWS')
        st.write('')
        st.write('1) Login into your AWS account and go to the AWS Management Console')
        st.image('Screenshot (354).png')
        st.write('2) Click on EC2 and then Launch Instances')
        st.image('Screenshot (355)__01 (1).png')
        st.write('3) Choose any Amazon Machine Image (we chose a free tier one)')
        st.image('Screenshot (356)__01 (1).png')
        st.write('4) Choose an Instance Type (we chose the free tier one)')
        st.image('Screenshot (357)__01 (1).png')
        st.write('5) Click Review and Launch and go to Security Groups')
        st.image('Screenshot (358)__01 (1).png')
        st.write('6) Edit the Security Group, make Type as All traffic and Source as Anywhere and then click Review and Launch')
        st.image('Screenshot (359)__01 (1).png')
        st.write('7) Create a new key pair, download it and then Launch Instance')
        st.image('Screenshot (361)__01 (1).png')
        st.write('8) Open PuTTYGen, load the key-pair pem file')
        st.image('Screenshot (364)__01 (1).png')
        st.write('9)Go to Key and select Parameters for saving key files')
        st.image('Screenshot (372)__01 (1).png')
        st.write('10) Select the PPK file version as 2 instead of 3')
        st.image('Screenshot (373)__01 (1).png')
        st.write('11) Open the EC2 running instance and copy the Public IPv4 DNS and note down the user-name')
        st.image('Screenshot (367)__01 (1).png')
        st.write('12) Now open WINSCP and enter hostname as the copied IPv4 and the username')
        st.image('Screenshot (368)__01 (1).png')
        st.write('13) Go to Advanced and under Authentication, enter the private key and click Login')
        st.image('Screenshot (369)__01 (1).png')
        st.write('14) Now drag all the necessary files from the left section to the right ')
        st.image('Screenshot (377)__01 (1).png')
        st.write('15) Open PUTTY, enter the host name and then under SSH-Auth, load the private key')
        st.image('Screenshot (378)__01 (1).png')
        st.write('16) Give the session a name and save it, then open the session')
        st.image('Screenshot (380)__01 (1).png')
        st.write('17) Login as the username, install python and all the necessary libraries')
        st.image('Screenshot (381)__01 (1).png')
        st.write('18) Run the command streamlit run filename.py')
        st.image('Screenshot (383)__01 (1).png')
        st.write('19) Open the External url in the browser, the webapp is deployed on EC2')
        st.image('Screenshot (392).png')

    if dep_process=='Azure VM':
        st.header('Azure VM')
        st.write('')
        st.write('Pre-requisite 1: Push your code and the following files into your git branch:')
        st.write('1. requirements.txt')
        st.write('2. .py file/files')
        st.write('3. any pickle file/xlsx file/csv file/json file if necessary')
        st.write('Pre-requisite 2: Create a account on Azure')
        st.write('')
        st.write('1) Login to Azure, create the virtual machine, select the image and size options')
        st.image('azure-1.png')
        st.write('2) Add members, keep rest settings to default and create the VM')
        st.image('azure-2.png')
        st.write('3) You will get this, keep the instance running and copy the public ip address to clipboard ')
        st.image('azure-3.png')
        st.write('4) Open putty and paste the host name')
        st.image('azure-4.png')
        st.write('5) Setup port forwarding')
        st.image('azure-5.png')
        st.write('6) Login using the credentials setup in azure vm')
        st.image('azure-6.png')
        st.write('7) Clone the git into the linux model, make necessary installations and run the streamlit file on local host')
        st.image('azure-7.png')
        st.write('8) Run the given address on your host computer, or on any computer present in LAN')
        st.image('azure-8.png')

    st.sidebar.subheader('Comparisons of Deployment')
    comparison = st.sidebar.radio('Select a comparison attribute:', ['Default', 'Computational Speed', 'Ease of deployment', 'Accessibility','Pricing','Storage','Error handling','Drawbacks'])
    if dep_process=='Default':
        if comparison == 'Computational Speed':
            st.header('Computational Speed')
            st.image('Screenshot (385).png')
            st.write('Rated on a scale of 1-10 as tested by us with 1 being low and 10 being high')
        if comparison == 'Ease of deployment':
            st.header('Ease of deployment')
            st.image('Screenshot (386).png')
            st.write('Rated on a scale of 1-10 as experienced by us with 1 being low and 10 being high')
        if comparison == 'Accessibility':
            st.header('Accessibility')
            st.image('Screenshot (387).png')
            st.write('Rated on a scale of 1-10 as experienced by us with 1 being low and 10 being high')
        if comparison == 'Drawbacks':
            st.header('Drawbacks')
            st.image('Screenshot (388).png')
            st.write('This is in general and not specifc to our webapp only')
        if comparison=='Pricing':
            st.header('Pricing')
            st.image('Screenshot (389).png')
            st.write('This is in general and not specifc to our webapp only')
        if comparison=='Storage':
            st.header('Storage')
            st.image('Screenshot (390).png')
            st.write('This is in general and not specifc to our webapp only')
        if comparison=='Error handling':
            st.header('Error handling')
            st.image('Screenshot (391).png')
            st.write('Rated as experienced by us')


    st.sidebar.subheader('Future Enhancements')
    st.sidebar.write('1. Move the codebase from streamlit to some other coding framework')
    st.sidebar.write('2. Making a more portable format of the application instead of a browser deployment method which is being used currently')
    st.sidebar.write('3. Instead of outsourcing the saas, building it on our own servers for cost-cutting')



spotify_compare()